{"version":3,"sources":["../src/d3_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","moment","_","d3","panelDefaults","D3Controller","$scope","$injector","defaults","panel","thresholds","events","on","onInitEditMode","bind","onDataReceived","onPanelInitialized","onRender","onRefresh","updateScaleColor","cargarPlano","mapRoute","console","info","log","addEditorTab","dataList","length","type","dataType","data","map","seriesHandler","mapSeriesToValue","mappedData","i","valueMaps","correspondance","index","s","indexOf","metric","t","target","push","render","renderSala","discrete_continuous","domain","parseInt","a","series","datapoints","alias","timeseries","value","id","valueStat","Math","min","max","reduce","b","scaleColor","colors","scaleLinear","range","dir","xml","mimeType","get","error","document","getElementsByClassName","appendChild","documentElement","salas","select","selectAll","d","identificador","transition","duration","ease","easeLinear","style","$","proxy","valor","mapping","splice","desc","templateUrl"],"mappings":"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","file":"d3_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport * as d3 from './libs/d3/build/d3.js' ;\n\nimport { panelDefaults } from \"./panelDefaults.js\";\n\nexport class D3Controller extends MetricsPanelCtrl{\n    constructor( $scope, $injector){\n        super( $scope, $injector);\n        _.defaults( this.panel, panelDefaults);\n        this.panel.thresholds = panelDefaults.thresholds;\n        this.panel.thresholds = panelDefaults.thresholds;\n\n\n        this.events.on( 'init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on( 'data-received', this.onDataReceived.bind(this));\n        this.events.on( 'panel-initialized', this.onPanelInitialized.bind(this));\n        this.events.on( 'render', this.onRender.bind(this));\n        this.events.on( 'refresh', this.onRefresh.bind(this));\n\n        this.updateScaleColor();\n\n        this.cargarPlano( 'plano', this.panel.mapRoute);\n        console.info('This panel');\n        console.log(this.panel);\n    }\n\n    // Grafana event controllers\n    onPanelInitialized(){\n    \n    }\n\n    onInitEditMode(){\n        this.addEditorTab( 'Options', 'public/plugins/alex-d3-panel/partials/optionsEditor.html', 2);\n//        this.addEditorTab( 'Value Mappings', 'public/plugins/alex-d3-panel/partials/valueMappingsEditor.html', 2);\n        this.addEditorTab( 'Render', 'public/plugins/alex-d3-panel/partials/renderEditor.html', 3);\n    }\n\n    onDataReceived( dataList){\n        //console.info('onDataReceived');\n        if( dataList.length > 0){\n            if( dataList[0].type === 'table'){\n                console.info('table-received');\n                this.panel.dataType = 'table';\n                \n\n            }else {//if( dataList[0].type === 'timeseries'){\n//                console.info('timeseries-received');\n                this.panel.dataType = 'timeseries';\n                let data = dataList.map( this.seriesHandler.bind( this));\n                this.panel.data = data.map( this.mapSeriesToValue.bind( this));\n            }\n        }else{ return;}\n\n        this.panel.mappedData = [];\n        for( var i in this.panel.valueMaps){\n            var correspondance = this.panel.valueMaps[i];\n            let index = this.panel.data.map( function(s){return(s['metric']);}).indexOf( correspondance.metric);\n\n            if( index != -1){                \n                let t = {};\n                t['identificador'] = correspondance.target;\n                t['valor'] = this.panel.data[index]['value'];\n                this.panel.mappedData.push(t);\n            }\n        }\n//        console.log('Data : ',this.panel.data);\n//        console.log('Mapped data : ',this.panel.mappedData);\n        this.render();\n    }\n\n    onRender(){\n        \n  //      console.info('onRender');\n        this.renderSala( '.plano', this.panel.mappedData);\n    }\n\n    onRefresh(){\n//        console.info('onRefresh');\n//        console.log( this.panel);\n    }\n\n    onColorChange( index){\n        console.info(\"onColorChange\");\n        console.info('panel');\n        console.log(this.panel);\n        console.info('scnd');\n        console.log(this.panel.discrete_continuous + \" ths -> \"+this.panel.thresholds[0]+\" domain -> \"+this.panel.domain);\n\n        this.panel.thresholds = this.panel.thresholds.map(a=>parseInt(a));\n        this.panel.domain = this.panel.domain.map(a=>parseInt(a));\n\n        this.updateScaleColor();\n        this.render();\n    }\n\n    // Data manipulation functions\n    seriesHandler( dataList){\n        //tratar nulos\n        let series = new TimeSeries({\n            datapoints: dataList.datapoints,\n            alias: dataList.target\n        });\n\n        return( series);\n    }\n\n    mapSeriesToValue( timeseries){\n        let value = {};\n        value['metric'] = timeseries.id;\n        switch( this.panel.valueStat){\n            case 'min':\n                value['value'] = Math.min( ...timeseries.datapoints.map(function(s){ return( s[0]);}));\n            break;\n            case 'max':\n                value['value'] = Math.max( ...timeseries.datapoints.map(function(s){ return( s[0]);}));\n            break;\n            case 'avg':\n                value['value'] = timeseries.datapoints.map(function(s){ return( s[0]);})\n                                            .reduce( (a,b)=>a+b, 0) / timeseries.datapoints.length\n            break;\n            case 'current':\n                value['value'] = timeseries.datapoints[ timeseries.datapoints.length -1][0];\n            break;\n            case 'total':\n                value['value'] = timeseries.datapoints.map(function(s){ return( s[0]);}).reduce( (a,b)=>a+b, 0);\n            break;\n            case 'name':\n                \n            break;\n            case 'first':\n                value['value'] = timeseries.datapoints[0][0];\n            break;\n            case 'delta':\n                \n            break;\n            case 'diff':\n                \n            break;\n            case 'range':\n                \n            break;\n            case 'last_time':\n                \n            break;\n        }\n        return( value);\n    }\n\n    // Rendering functions\n    updateScaleColor(){\n        if(this.panel.discrete_continuous == true){\n            this.scaleColor = (function( value){\n                if( value <= this.panel.thresholds[0]){\n                    return( this.panel.colors[0]);\n                }else if( value <= this.panel.thresholds[1]){\n                    return( this.panel.colors[1]);\n                }else{\n                    return( this.panel.colors[2]);\n                }\n            });\n        }else{\n            this.scaleColor =  d3.scaleLinear()\n            .domain( this.panel.domain)\n            .range( this.panel.colors);\n        }\n    }\n\n    cargarPlano( target, dir){\n        d3.xml( dir).mimeType( \"image/svg+xml\").get( function( error, xml){\n            if( error){ throw( error);}\n            document.getElementsByClassName(target)[0].appendChild(xml.documentElement);\n        });\n    }\n\n    renderSala (target, data){\n        //Binding\n        var salas = d3.select(target+' svg').selectAll('rect')\n            .data(data, function(d){ return d ? d.identificador : this.id; });\n\n        //Update\n        var t = d3.transition()\n            .duration(750)\n            .ease(d3.easeLinear);\n        salas\n            .transition(t)\n                .style('fill', $.proxy( function(d){ return this.scaleColor( d.valor)}, this));\n\n        var salas = d3.select(target+' svg').selectAll('path')\n            .data(data, function(d){ return d ? d.identificador : this.id; });\n\n        //Update\n        var t = d3.transition()\n            .duration(750)\n            .ease(d3.easeLinear);\n        salas\n            .transition(t)\n                .style('fill', $.proxy( function(d){ return this.scaleColor( d.valor)}, this));\n    }\n\n    // Configuration panels\n\n    removeValueMapping( mapping){\n        let index = this.panel.valueMaps.indexOf( mapping);\n        this.panel.valueMaps.splice( index);\n    }\n\n    addValueMapping(){\n        this.panel.valueMaps.push({metric: '', target: '', desc: ''});\n    }    \n}\n\nD3Controller.templateUrl = 'partials/module.html';\n"]}