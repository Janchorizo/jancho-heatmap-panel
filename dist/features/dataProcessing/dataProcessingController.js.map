{"version":3,"sources":["../../../src/features/dataProcessing/dataProcessingController.ts"],"names":["MetricsPanelCtrl","TimeSeries","_","dataProcessingDefaults","Feature","$scope","panelController","ctrl","panel","defaults","events","on","onDataReceived","bind","onRefresh","addEditorTab","dataProcessingEditor","dataList","length","rawData","dataProcessing","processingOnGoing","data","map","seriesHandler","mapSeriesToValue","series","datapoints","alias","target","timeseries","value","id","valueStat","Math","min","s","max","reduce","a","b"],"mappings":"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","file":"dataProcessingController.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport _ from 'lodash';\n\nimport { dataProcessingDefaults } from \"./dataProcessingDefaults.js\";\n//import { dataProcessingEditor } from \"./dataProcessingEditor.js\";\n\nexport default class Feature{\n  constructor( $scope){\n      this.$scope = $scope;\n      this.panelController = $scope.ctrl;\n      this.panel = this.panelController.panel;\n      _.defaults( this.panelController.panel, dataProcessingDefaults);\n\n      //this.panelController.events.on( 'init-edit-mode', this.onInitEditMode.bind(this));\n      this.panelController.events.on( 'data-received', this.onDataReceived.bind(this));\n      //this.panelController.events.on( 'panel-initialized', this.onPanelInitialized);\n      this.panelController.events.on( 'refresh', this.onRefresh.bind(this));\n\n  }\n\n  onInitEditMode(){\n      this.panelController.addEditorTab( 'DataProcessing', dataProcessingEditor( this.$scope), 2);\n  }\n\n  onDataReceived( dataList){\n    if( dataList.length > 0){\n      this.panel.rawData = dataList;\n      this.panel.dataProcessing.processingOnGoing = true;\n\n      let data = dataList.map( this.seriesHandler.bind( this));\n      this.panel.data = data.map( this.mapSeriesToValue.bind( this));\n\n      this.panel.dataProcessing.processingOnGoing = false;\n    }else{ return;}\n  }\n\n  onRefresh(){\n    if( this.panel.rawData.length > 0){\n      this.panel.dataProcessing.processingOnGoing = true;\n\n      let data = this.panel.rawData.map( this.seriesHandler.bind( this));\n      this.panel.data = data.map( this.mapSeriesToValue.bind( this));\n\n      this.panel.dataProcessing.processingOnGoing = false;\n    }else{ return;}\n  }\n\n  seriesHandler( dataList){\n        //tratar nulos\n        let series = new TimeSeries({\n            datapoints: dataList.datapoints,\n            alias: dataList.target\n        });\n        return( series);\n    }\n\n  mapSeriesToValue( timeseries){\n        let value = {};\n        value['metric'] = timeseries.id;\n        switch( this.panel.valueStat){\n            case 'min':\n                value['value'] = Math.min( ...timeseries.datapoints.map(function(s){ return( s[0]);}));\n            break;\n            case 'max':\n                value['value'] = Math.max( ...timeseries.datapoints.map(function(s){ return( s[0]);}));\n            break;\n            case 'avg':\n                value['value'] = timeseries.datapoints.map(function(s){ return( s[0]);})\n                                            .reduce( (a,b)=>a+b, 0) / timeseries.datapoints.length\n            break;\n            case 'current':\n                value['value'] = timeseries.datapoints[ timeseries.datapoints.length -1][0];\n            break;\n            case 'total':\n                value['value'] = timeseries.datapoints.map(function(s){ return( s[0]);}).reduce( (a,b)=>a+b, 0);\n            break;\n            case 'name':\n\n            break;\n            case 'first':\n                value['value'] = timeseries.datapoints[0][0];\n            break;\n            case 'delta':\n\n            break;\n            case 'diff':\n\n            break;\n            case 'range':\n\n            break;\n            case 'last_time':\n\n            break;\n        }\n        return( value);\n    }\n}\n"]}