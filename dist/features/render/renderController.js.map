{"version":3,"sources":["../../../src/features/render/renderController.ts"],"names":["MetricsPanelCtrl","TimeSeries","_","d3","renderDefaults","renderEditor","Feature","$scope","panelController","ctrl","panel","defaults","events","on","onInitEditMode","bind","onPanelInitialized","onRender","addEditorTab","console","info","renderSala","panelDivId","data","actualizarColores","cargarPlano","render","baseMapRoute","mapRoute","discrete_continuous","scaleColor","value","thresholds","colors","scaleLinear","domain","range","target","dir","xml","mimeType","get","error","div","document","getElementById","removeChild","childNodes","appendChild","documentElement","t","transition","duration","ease","easeLinear","salas","select","selectAll","elementIdentifyer","d","metric","id","style","$","proxy"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,kBAAAA,gB;;AACDC,gB;;AACAC,O;;AACKC,Q;;AAEHC,oB,qBAAAA,c;;AACAC,kB,mBAAAA,Y;;;;;;;;;;;;;;;;;;;;;AAEYC,a;AACnB,yBAAaC,MAAb,EAAoB;AAAA;;AAChB,eAAKA,MAAL,GAAcA,MAAd;AACA,eAAKC,eAAL,GAAuBD,OAAOE,IAA9B;AACA,eAAKC,KAAL,GAAa,KAAKF,eAAL,CAAqBE,KAAlC;AACAR,YAAES,QAAF,CAAY,KAAKH,eAAL,CAAqBE,KAAjC,EAAwCN,cAAxC;;AAEA,eAAKI,eAAL,CAAqBI,MAArB,CAA4BC,EAA5B,CAAgC,gBAAhC,EAAkD,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAlD;AACA;AACA,eAAKP,eAAL,CAAqBI,MAArB,CAA4BC,EAA5B,CAAgC,mBAAhC,EAAqD,KAAKG,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAArD;AACA,eAAKP,eAAL,CAAqBI,MAArB,CAA4BC,EAA5B,CAAgC,QAAhC,EAA0C,KAAKI,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAA1C;AACA;AACH;;;;2CAEe;AACd,iBAAKP,eAAL,CAAqBU,YAArB,CAAmC,QAAnC,EAA6Cb,aAAc,KAAKE,MAAnB,CAA7C,EAAyE,CAAzE;AACD;;;qCAES;AACRY,oBAAQC,IAAR,CAAa,uBAAb;AACA,iBAAKC,UAAL,CAAiB,MAAI,KAAKX,KAAL,CAAWY,UAAhC,EAA4C,KAAKZ,KAAL,CAAWa,IAAvD;AACAJ,oBAAQC,IAAR,CAAa,wBAAb;AACD;;;+CAEmB;AAClB,iBAAKI,iBAAL;AACA,iBAAKC,WAAL,CAAkB,KAAKf,KAAL,CAAWY,UAA7B,EAAyC,KAAKZ,KAAL,CAAWgB,MAAX,CAAkBC,YAAlB,GAAiC,KAAKjB,KAAL,CAAWgB,MAAX,CAAkBE,QAA5F;AACA,iBAAKpB,eAAL,CAAqBkB,MAArB;AACD;;;8CAEkB;AACjB,gBAAG,KAAKhB,KAAL,CAAWgB,MAAX,CAAkBG,mBAAlB,IAAyC,IAA5C,EAAiD;AAC/C,mBAAKC,UAAL,GAAmB,UAAUC,KAAV,EAAgB;AACjC,oBAAIA,SAAS,KAAKrB,KAAL,CAAWgB,MAAX,CAAkBM,UAAlB,CAA6B,CAA7B,CAAb,EAA6C;AAC3C,yBAAQ,KAAKtB,KAAL,CAAWgB,MAAX,CAAkBO,MAAlB,CAAyB,CAAzB,CAAR;AACD,iBAFD,MAEM,IAAIF,SAAS,KAAKrB,KAAL,CAAWgB,MAAX,CAAkBM,UAAlB,CAA6B,CAA7B,CAAb,EAA6C;AACjD,yBAAQ,KAAKtB,KAAL,CAAWgB,MAAX,CAAkBO,MAAlB,CAAyB,CAAzB,CAAR;AACD,iBAFK,MAED;AACH,yBAAQ,KAAKvB,KAAL,CAAWgB,MAAX,CAAkBO,MAAlB,CAAyB,CAAzB,CAAR;AACD;AACF,eARD;AASD,aAVD,MAUK;AACH,mBAAKH,UAAL,GAAmB3B,GAAG+B,WAAH,GAChBC,MADgB,CACR,KAAKzB,KAAL,CAAWgB,MAAX,CAAkBS,MADV,EAEhBC,KAFgB,CAET,KAAK1B,KAAL,CAAWgB,MAAX,CAAkBO,MAFT,CAAnB;AAGD;AACF;;;sCASYI,M,EAAQC,G,EAAI;AACvB;AACAnC,eAAGoC,GAAH,CAAQD,GAAR,EAAaE,QAAb,CAAuB,eAAvB,EAAwCC,GAAxC,CAA6C,UAAUC,KAAV,EAAiBH,GAAjB,EAAqB;AAChE,kBAAIG,KAAJ,EAAU;AAAE,sBAAOA,KAAP;AAAe;AAC3B,kBAAIC,MAAMC,SAASC,cAAT,CAAwBR,MAAxB,CAAV;AACA,kBAAGM,OAAO,IAAV,EAAe;AACbA,oBAAIG,WAAJ,CAAgBH,IAAII,UAAJ,CAAe,CAAf,CAAhB;AACAJ,oBAAIK,WAAJ,CAAgBT,IAAIU,eAApB;AACD;AACF,aAPD;AAQD;;;qCAEWZ,M,EAAQd,I,EAAK;AACvB,gBAAI2B,IAAI/C,GAAGgD,UAAH,GACPC,QADO,CACE,GADF,EAEPC,IAFO,CAEFlD,GAAGmD,UAFD,CAAR;;AAIA;AACA,gBAAIC,QAAQpD,GAAGqD,MAAH,CAAUnB,SAAO,MAAjB,EAAyBoB,SAAzB,CAAoC,KAAK/C,KAAL,CAAWgB,MAAX,CAAkBgC,iBAAtD,EACTnC,IADS,CACJA,IADI,EACE,UAASoC,CAAT,EAAW;AAAE,qBAAOA,IAAIA,EAAEC,MAAN,GAAe,KAAKC,EAA3B;AAAgC,aAD/C,CAAZ;;AAGA;AACAN,kBACGO,KADH,CACS,MADT,EACiB,MADjB;AAEAP,kBACGJ,UADH,CACcD,CADd,EAEGY,KAFH,CAES,MAFT,EAEiBC,EAAEC,KAAF,CAAS,UAASL,CAAT,EAAW;AAAE,qBAAO,KAAK7B,UAAL,CAAiB6B,EAAE5B,KAAnB,CAAP;AAAiC,aAAvD,EAAyD,IAAzD,CAFjB;AAGJ;;;;;;;;;AASG;;;;;;yBA3FkBzB,O","file":"renderController.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport _ from 'lodash';\nimport * as d3 from '../../libs/d3/build/d3.js' ;\n\nimport { renderDefaults } from \"./renderDefaults.js\";\nimport { renderEditor } from \"./renderEditor.js\";\n\nexport default class Feature{\n  constructor( $scope){\n      this.$scope = $scope;\n      this.panelController = $scope.ctrl;\n      this.panel = this.panelController.panel;\n      _.defaults( this.panelController.panel, renderDefaults);\n\n      this.panelController.events.on( 'init-edit-mode', this.onInitEditMode.bind(this));\n      //this.panelController.events.on( 'data-received', this.onDataReceived);\n      this.panelController.events.on( 'panel-initialized', this.onPanelInitialized.bind(this));\n      this.panelController.events.on( 'render', this.onRender.bind(this));\n      //this.panelController.events.on( 'refresh', this.onRefresh);\n  }\n\n  onInitEditMode(){\n    this.panelController.addEditorTab( 'Render', renderEditor( this.$scope), 2);\n  }\n\n  onRender(){\n    console.info('renderizando sala ...');\n    this.renderSala( '#'+this.panel.panelDivId, this.panel.data);\n    console.info('renderizado completado');\n  }\n\n  onPanelInitialized(){\n    this.actualizarColores();\n    this.cargarPlano( this.panel.panelDivId, this.panel.render.baseMapRoute + this.panel.render.mapRoute);\n    this.panelController.render();\n  }\n\n  actualizarColores(){\n    if(this.panel.render.discrete_continuous == true){\n      this.scaleColor = (function( value){\n        if( value <= this.panel.render.thresholds[0]){\n          return( this.panel.render.colors[0]);\n        }else if( value <= this.panel.render.thresholds[1]){\n          return( this.panel.render.colors[1]);\n        }else{\n          return( this.panel.render.colors[2]);\n        }\n      });\n    }else{\n      this.scaleColor =  d3.scaleLinear()\n        .domain( this.panel.render.domain)\n        .range( this.panel.render.colors);\n    }\n  }\n\n  /**\n   * cargarPlano - Carga el plano svg en el elemento indicado\n   *\n   * @param  {type} target Id del elemento div en el que cargar el plano\n   * @param  {type} dir    DirecciÃ³n al fichero SVG\n   * @return {type}        No tiene valor de retorno\n   */\n  cargarPlano( target, dir){\n    // target => class name\n    d3.xml( dir).mimeType( \"image/svg+xml\").get( function( error, xml){\n      if( error){ throw( error);}\n      let div = document.getElementById(target);\n      if(div != null){\n        div.removeChild(div.childNodes[0]);\n        div.appendChild(xml.documentElement);\n      }\n    });\n  }\n\n  renderSala (target, data){\n    var t = d3.transition()\n    .duration(750)\n    .ease(d3.easeLinear);\n\n    //Binding\n    var salas = d3.select(target+' svg').selectAll( this.panel.render.elementIdentifyer)\n      .data(data, function(d){ return d ? d.metric : this.id; });\n\n    //Update\n    salas\n      .style('fill', '#fff');\n    salas\n      .transition(t)\n      .style('fill', $.proxy( function(d){ return this.scaleColor( d.value)}, this));\n/*\n    //Binding\n    var salas = d3.select(target+' svg').selectAll('path')\n      .data(data, function(d){ return d ? d.metric : this.id; });\n\n    //Update\n    salas\n      .transition(t)\n      .style('fill', $.proxy( function(d){ return this.scaleColor( d.value)}, this));*/\n  }\n}\n"]}