{"version":3,"sources":["../../../src/features/mapping/mappingController.ts"],"names":["MetricsPanelCtrl","TimeSeries","_","mappingDefaults","mappingEditor","Feature","$scope","console","log","panelController","ctrl","panel","defaults","events","on","onInitEditMode","bind","onDataReceived","onRefresh","addEditorTab","dataList","mapData","render","data","processingOnGoing","window","setTimeout","info","mappedData","mapping","mapByAlias","i","targets","correspondance","series","refId","index","map","s","indexOf","t","alias","push","identificador","valor","valueMaps","metric","target"],"mappings":"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","file":"mappingController.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport _ from 'lodash';\n//import * as d3 from './libs/d3/build/d3.js' ;\n\nimport { mappingDefaults } from \"./mappingDefaults.js\";\nimport { mappingEditor } from \"./mappingEditor.js\";\n\nexport default class Feature{\n  constructor( $scope){\n      console.log('mapping object doing');\n      this.$scope = $scope;\n      this.panelController = $scope.ctrl;\n      this.panel = this.panelController.panel;\n      _.defaults( this.panelController.panel, mappingDefaults);\n\n      this.panelController.events.on( 'init-edit-mode', this.onInitEditMode.bind(this));\n      this.panelController.events.on( 'data-received', this.onDataReceived.bind(this));\n      this.panelController.events.on( 'refresh', this.onRefresh.bind(this));\n\n      console.log('mapping object done');\n  }\n\n  onInitEditMode(){\n      this.panelController.addEditorTab( 'Mapping', mappingEditor( this.$scope), 2);\n  }\n\n  onDataReceived( dataList){\n    console.log('Mapping controller onDataReceived');\n    this.mapData();\n    this.panelController.render();\n  }\n\n  onRefresh( ){\n    console.log('dataProcessing controller refresh');\n    this.mapData();\n    this.panelController.render();\n  }\n\n  mapData(){\n    if(this.panelController.panel.data.processingOnGoing == true) {\n       window.setTimeout(onDataReceived, 100); /* this checks the flag every 100 milliseconds*/\n    } else {\n      console.info('Mapping data ...');\n      this.panel.mappedData = [];\n\n      if(this.panelController.panel.mapping.mapByAlias == true){\n        console.log('Mapping by alias');\n        for( var i in this.panel.targets){\n          let correspondance = this.panel.targets[i];\n          correspondance.series = correspondance.refId+\"-series\";\n          let index = this.panel.data.map( function(s){return(s['metric']);}).indexOf( correspondance.series);\n\n          if( index != -1){\n            let t = {};\n            t['identificador'] = correspondance.alias;\n            t['valor'] = this.panel.data[index]['value'];\n            this.panel.mappedData.push(t);\n            console.log('added ' + t.identificador + \" \" + t.valor);\n          }\n        }\n      }else{\n        console.log('Mapping by values');\n        for( var i in this.panel.valueMaps){\n          var correspondance = this.panel.valueMaps[i];\n          let index = this.panel.data.map( function(s){return(s['metric']);}).indexOf( correspondance.metric);\n\n          if( index != -1){\n            let t = {};\n            t['identificador'] = correspondance.target;\n            t['valor'] = this.panel.data[index]['value'];\n            this.panel.mappedData.push(t);\n            console.log('added ' + t.identificador + \" \" + t.valor);\n          }\n        }\n      }\n    }\n  }\n}\n"]}