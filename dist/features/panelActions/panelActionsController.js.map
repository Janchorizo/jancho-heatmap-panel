{"version":3,"sources":["../../../src/features/panelActions/panelActionsController.ts"],"names":["MetricsPanelCtrl","TimeSeries","_","panelActionsDefaults","panelActionsEditor","Feature","$scope","panelController","ctrl","defaults","panel"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,kBAAAA,gB;;AACDC,gB;;AACAC,O;;AAGEC,0B,2BAAAA,oB;;AACAC,wB,yBAAAA,kB;;;AAcYC,a;AACnB;;;;;;;AAOA,uBAAaC,MAAb,EAAoB;AAAA;;AAChB,aAAKA,MAAL,GAAcA,MAAd;AACA,aAAKC,eAAL,GAAuBD,OAAOE,IAA9B;AACAN,UAAEO,QAAF,CAAY,KAAKF,eAAL,CAAqBG,KAAjC,EAAwCP,oBAAxC;;AAEA;AACA;AACA;AACA;AACA;AAEH;;AAED;AACA;AACA;;;yBAvBmBE,O","file":"panelActionsController.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport _ from 'lodash';\n//import * as d3 from './libs/d3/build/d3.js' ;\n\nimport { panelActionsDefaults } from \"./panelActionsDefaults.js\";\nimport { panelActionsEditor } from \"./panelActionsEditor.js\";\n\n/**\n * @alias panelActionsFeature\n * @classdesc <h2>panelActions feature</h2>\n * Implementación de una funcionalidad<br>\n * Mediante el patrón mediador, se suscribe a los eventos del plugin a través\n * de la referencia al $scope que se le pasa.\n * <br>\n * <br><h3>Funcionalidad</h3>\n * Proporciona funcionalidad añadida para el menú contextual del panel<br>\n * <br><h3>Eventos suscritos</h3>\n * ninguno\n */\nexport default class Feature{\n  /**\n   * constructor - description\n   *\n   * @param  {type} $scope Es el contexto del plugin que se pasa para poder suscribirse\n   * a los eventos.\n   * @return {type}        Nueva instancia de un Feature\n   */\n  constructor( $scope){\n      this.$scope = $scope;\n      this.panelController = $scope.ctrl;\n      _.defaults( this.panelController.panel, panelActionsDefaults);\n\n      //this.panelController.events.on( 'init-edit-mode', this.onInitEditMode.bind(this));\n      //this.panelController.events.on( 'data-received', this.onDataReceived);\n      //this.panelController.events.on( 'panel-initialized', this.onPanelInitialized);\n      //this.panelController.events.on( 'render', this.onRender);\n      //this.panelController.events.on( 'refresh', this.onRefresh);\n\n  }\n\n  //onInitEditMode(){\n  //    this.panelController.addEditorTab( 'PanelActions', panelActionsEditor( this.$scope), 2);\n  //}\n}\n"]}